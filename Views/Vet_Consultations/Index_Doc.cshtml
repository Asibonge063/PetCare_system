@model IEnumerable<PetCare_system.Models.Vet_Consultations>
@{
    ViewBag.Title = "Vet Consultations";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Title - PetCare System</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #4361ee;
            --primary-light: #e6e9ff;
            --secondary: #3a0ca3;
            --success: #4cc9f0;
            --warning: #f8961e;
            --danger: #ef233c;
            --light: #f8f9fa;
            --dark: #212529;
            --text: #495057;
            --border: #dee2e6;
            --card-bg: #ffffff;
            --body-bg: #f5f7ff;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--body-bg);
            color: var(--text);
            line-height: 1.6;
        }

        /* Simplified Header */
        .app-header {
            background: var(--primary);
            color: white;
            padding: 1.5rem 0;
            margin-bottom: 2rem;
        }

        .app-title {
            font-weight: 600;
            font-size: 1.8rem;
        }

        /* Main Content Container */
        .main-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 1rem;
        }

        /* Search and Filter Bar */
        .search-bar {
            background: white;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            align-items: center;
        }

        .search-input {
            flex: 1;
            min-width: 250px;
            border: 1px solid var(--border);
            border-radius: 6px;
            padding: 0.6rem 1rem;
        }

        .filter-btn {
            background: var(--primary-light);
            color: var(--primary);
            border: none;
            border-radius: 6px;
            padding: 0.6rem 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        /* Table Styles */
        .consultation-table {
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 3px 10px rgba(0,0,0,0.05);
            margin-bottom: 2rem;
        }

        .table-responsive {
            overflow-x: auto;
        }

        .table {
            margin-bottom: 0;
        }

            .table thead th {
                background-color: var(--primary);
                color: white;
                font-weight: 500;
                vertical-align: middle;
                padding: 1rem 1.25rem;
                border-bottom: none;
            }

            .table tbody tr {
                transition: background-color 0.2s ease;
            }

                .table tbody tr:hover {
                    background-color: rgba(67, 97, 238, 0.05);
                }

                .table tbody tr:not(:last-child) {
                    border-bottom: 1px solid var(--border);
                }

            .table td {
                padding: 1rem 1.25rem;
                vertical-align: middle;
            }

        /* Status Badges */
        .status-badge {
            padding: 0.4rem 0.8rem;
            border-radius: 50px;
            font-size: 0.85rem;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 0.4rem;
            white-space: nowrap;
        }

        .status-available {
            background: rgba(76, 201, 240, 0.2);
            color: var(--success);
        }

        .status-unavailable {
            background: rgba(239, 35, 60, 0.2);
            color: var(--danger);
        }

        /* Payment status styles */
        .payment-status {
            padding: 0.5rem;
            border-radius: 6px;
            display: inline-block;
            font-weight: 500;
        }

            .payment-status.paid {
                background-color: rgba(76, 201, 240, 0.2);
                color: var(--success);
            }

            .payment-status.pending {
                background-color: rgba(239, 35, 60, 0.2);
                color: var(--danger);
            }

            .payment-status.past {
                background-color: rgba(248, 150, 30, 0.2);
                color: var(--warning);
            }

        /* Pet Info Cell */
        .pet-info-cell {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .pet-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
            background: var(--primary-light);
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--primary);
            font-size: 1rem;
        }

        .pet-name {
            font-weight: 600;
            margin-bottom: 0.2rem;
        }

        .pet-type {
            font-size: 0.85rem;
            color: var(--text);
            opacity: 0.8;
        }

        /* Action Buttons */
        .action-buttons {
            display: flex;
            gap: 0.5rem;
        }

        .action-btn {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s ease;
            color: white;
            border: none;
        }

            .action-btn:hover {
                transform: scale(1.1);
            }

        .btn-view {
            background: var(--primary);
        }

        .btn-feedback {
            background: var(--warning);
        }

        .btn-edit {
            background: var(--secondary);
        }

        .btn-delete {
            background: var(--danger);
        }

        /* Health Indicators */
        .health-indicators {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
        }

        .health-indicator {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background-color: var(--border);
        }

            .health-indicator.active {
                background-color: var(--success);
            }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 3rem;
            background: white;
            border-radius: 10px;
            box-shadow: 0 3px 10px rgba(0,0,0,0.05);
        }

        .empty-icon {
            font-size: 3rem;
            color: var(--primary-light);
            margin-bottom: 1rem;
        }

        /* Responsive Adjustments */
        @@media (max-width: 992px) {
            .table-responsive {
                border: 0;
            }

            .table thead {
                display: none;
            }

            .table tr {
                display: block;
                margin-bottom: 1rem;
                border-radius: 8px;
                box-shadow: 0 2px 8px rgba(0,0,0,0.1);
            }

            .table td {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 0.75rem 1rem;
                text-align: right;
                border-bottom: 1px solid var(--border);
            }

                .table td::before {
                    content: attr(data-label);
                    font-weight: 600;
                    margin-right: auto;
                    padding-right: 1rem;
                    text-align: left;
                    color: var(--primary);
                }

            .pet-info-cell {
                justify-content: flex-end;
            }

            .action-buttons {
                justify-content: flex-end;
            }
        }

        /* Accessibility Focus Styles */
        a:focus, button:focus, input:focus {
            outline: 2px solid var(--primary);
            outline-offset: 2px;
        }

        /* Print Styles */
        @@media print {
            .search-bar, .action-buttons {
                display: none;
            }

            .table {
                box-shadow: none;
                border: 1px solid var(--border);
            }
        }
    </style>
</head>
<body>
    <header class="app-header">
        <div class="main-container">
            <h1 class="app-title">@ViewBag.Title</h1>
        </div>
    </header>

    <main class="main-container">
        <div class="search-bar">
            <input type="text" class="search-input" placeholder="Search consultations..." aria-label="Search consultations">
            <button class="filter-btn" aria-expanded="false" aria-controls="filterPanel">
                <i class="fas fa-filter"></i> Filters
            </button>
        </div>

        @if (!Model.Any())
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-calendar-times"></i>
                </div>
                <h3>No Consultations Found</h3>
                <p>There are no veterinary consultations scheduled at this time.</p>
            </div>
        }
        else
        {
            <div class="table-responsive consultation-table">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Pet Name</th>
                            <th>Pet Type</th>
                            <th>Consultation Date</th>
                            <th>Consultation Description</th>
                            <th>Type</th>
                            <th>Doctor Id</th>
                            <th>Doctor Status</th>
                            <th>Payment Status</th>
                            <th>Health Indicators</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var consultation in Model)
                        {
                            <tr>
                                <td data-label="Pet & Owner">
                                    <div class="pet-info-cell">
                                        @if (!string.IsNullOrEmpty(consultation.PicturePath))
                                        {
                                            <img src="@Url.Content(consultation.PicturePath)" alt="@consultation.PetName" class="pet-avatar">
                                        }
                                        else
                                        {
                                            <div class="pet-avatar">
                                                <i class="fas fa-paw"></i>
                                            </div>
                                        }
                                        <div>
                                            <div class="pet-name">@consultation.PetName</div>

                                        </div>
                                    </div>
                                </td>
                                <td data-label="Pet Type">@consultation.PetType</td>
                                <td data-label="Date">
                                    <div>@consultation.Consult_Date.ToShortDateString()</div>
                                    <div class="text-muted small">@consultation.Consult_Time.ToShortTimeString()</div>
                                </td>
                                <td data-label="Type">@consultation.Consult_Description</td>
                                <td data-label="Type">@consultation.ConsultationType</td>
                                <td data-label="Type">@consultation.DoctorId</td>
                                <td data-label="Doctor Status">
                                    <span class="status-badge @(consultation.DoctorAvailability ? "status-available" : "status-unavailable")">
                                        <i class="fas fa-user-md"></i> @(consultation.DoctorAvailability ? "Available" : "Unavailable")
                                    </span>
                                </td>
                                <td data-label="Payment">
                                    @if (consultation.Consult_Date < DateTime.Now)
                                    {
                                        <div class="payment-status past">
                                            <i class="fas fa-clock"></i> Past
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="payment-status @(consultation.PaymentStatus ? "paid" : "pending")">
                                            <i class="fas @(consultation.PaymentStatus ? "fa-check-circle" : "fa-clock")"></i> @(consultation.PaymentStatus ? "Paid" : "Pending")
                                        </div>
                                    }
                                </td>
                                <td data-label="Health">
                                    <div class="health-indicators">
                                        <span class="health-indicator @(consultation.HasSignsOfIllness ? "active" : "")" title="Illness Signs"></span>
                                        <span class="health-indicator @(consultation.IsOnMedication ? "active" : "")" title="Medication"></span>
                                        <span class="health-indicator @(consultation.IsVaccinated ? "active" : "")" title="Vaccinated"></span>
                                        <span class="health-indicator @(consultation.HasChangedEatingHabits ? "active" : "")" title="Eating Changes"></span>
                                        <span class="health-indicator @(consultation.HasUnusualBehaviors ? "active" : "")" title="Unusual Behavior"></span>
                                        <span class="health-indicator @(consultation.IsDewormed ? "active" : "")" title="Dewormed"></span>
                                    </div>
                                </td>
                                <td data-label="Actions">
                                    <div class="action-buttons">
                                        <a href="@Url.Action("Details", new { id = consultation.Consult_Id })" class="action-btn btn-view" aria-label="View details for @consultation.PetName" title="View Details">
                                            <i class="fas fa-eye"></i>
                                        </a>

                                        @if (consultation.ConsultationType == "Virtual")
                                        {
                                            <a href="@Url.Action("ProvideFeedback", new { id = consultation.Consult_Id })" class="action-btn btn-feedback" aria-label="Provide feedback for @consultation.PetName" title="Feedback">
                                                <i class="fas fa-comment-medical"></i>
                                            </a>
                                        }
                                        else
                                        {
                                            <a href="@Url.Action("PhysicalForm", new { id = consultation.Consult_Id })" class="action-btn btn-feedback" aria-label="Provide feedback for @consultation.PetName" title="PhysicaForm">
                                                <i class="fas fa-comment-medical"></i>
                                            </a>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }

        <div class="text-center my-4">
            <a href="@Url.Action("Dashboard_Doc", "Doctor")" class="btn btn-outline-primary">
                <i class="fas fa-arrow-left"></i> Back to Dashboard
            </a>
        </div>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Toggle filter panel
        document.querySelector('.filter-btn').addEventListener('click', function () {
            const panel = document.getElementById('filterPanel');
            panel.style.display = panel.style.display === 'none' ? 'block' : 'none';
            this.setAttribute('aria-expanded', panel.style.display === 'block');
        });

        // Confirm before deleting
        document.querySelectorAll('.btn-delete').forEach(button => {
            button.addEventListener('click', function (e) {
                if (!confirm('Are you sure you want to delete this consultation? This cannot be undone.')) {
                    e.preventDefault();
                }
            });
        });

        // Simple search functionality
        document.querySelector('.search-input').addEventListener('input', function (e) {
            const searchTerm = e.target.value.toLowerCase();
            document.querySelectorAll('tbody tr').forEach(row => {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(searchTerm) ? '' : 'none';
            });
        });

        // Tooltip initialization for health indicators
        document.querySelectorAll('.health-indicator').forEach(indicator => {
            indicator.addEventListener('mouseover', function () {
                const title = this.getAttribute('title');
                if (title) {
                    const tooltip = document.createElement('div');
                    tooltip.className = 'custom-tooltip';
                    tooltip.textContent = title;
                    tooltip.style.position = 'absolute';
                    tooltip.style.backgroundColor = 'var(--dark)';
                    tooltip.style.color = 'white';
                    tooltip.style.padding = '0.5rem 1rem';
                    tooltip.style.borderRadius = '4px';
                    tooltip.style.fontSize = '0.85rem';
                    tooltip.style.zIndex = '1000';

                    const rect = this.getBoundingClientRect();
                    tooltip.style.left = `${rect.left + window.scrollX}px`;
                    tooltip.style.top = `${rect.top + window.scrollY - 40}px`;

                    document.body.appendChild(tooltip);

                    this.addEventListener('mouseout', function () {
                        document.body.removeChild(tooltip);
                    }, { once: true });
                }
            });
        });
    </script>
</body>
</html>