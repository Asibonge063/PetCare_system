@model IEnumerable<PetCare_system.Models.Doctor>

@{
    ViewBag.Title = "Doctor Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Add breadcrumb navigation -->
<nav aria-label="breadcrumb" class="mb-4">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="@Url.Action("Dashboard", "Home")"><i class="fas fa-home"></i> Home</a></li>
        <li class="breadcrumb-item active" aria-current="page"><i class="fas fa-user-md"></i> Doctor Management</li>
    </ol>
</nav>

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mt-4">
            <i class="fas fa-user-md me-2"></i>Doctor Management
        </h1>
        <div>
            <a href="@Url.Action("Dashboard", "Home")" class="btn btn-outline-secondary me-2">
                <i class="fas fa-arrow-left me-1"></i> Back to Home
            </a>
            <a href="@Url.Action("AddDoctor", "Doctor")" class="btn btn-primary">
                <i class="fas fa-plus me-1"></i> Add New Doctor
            </a>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-header bg-white">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="fas fa-list me-1"></i> Doctor List
                </h5>
                <div class="input-group" style="width: 300px;">
                    <input type="text" id="searchInput" class="form-control" placeholder="Search doctors...">
                    <button class="btn btn-outline-secondary" type="button" id="searchButton">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </div>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover table-bordered" id="doctorsTable">
                        <thead class="table-light">
                            <tr>
                                <th><i class="fas fa-user me-1"></i> Full Name</th>
                                <th><i class="fas fa-envelope me-1"></i> Email</th>
                                <th><i class="fas fa-phone me-1"></i> Phone</th>
                                <th><i class="fas fa-stethoscope me-1"></i> Availiability</th>
                                <th><i class="fas fa-stethoscope me-1"></i> Specialization</th>
                                <th class="text-center"><i class="fas fa-cog me-1"></i> Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var doctor in Model)
                            {
                                <tr>
                                    <td>@doctor.FullName</td>
                                    <td>@doctor.Email</td>
                                    <td>@doctor.PhoneNumber</td>
                                    <td>@doctor.AvailabilityStatus</td>
                                    <td>
                                        <span class="badge bg-primary">@doctor.Specialization</span>
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group" role="group">
                                            <a href="@Url.Action("EditDoctor", "Doctor", new { id = doctor.Id })"
                                               class="btn btn-sm btn-outline-primary"
                                               title="Edit">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a href="@Url.Action("DoctorDetails", "Doctor", new { id = doctor.Id })"
                                               class="btn btn-sm btn-outline-info"
                                               title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a href="@Url.Action("DeleteDoctor", "Doctor", new { id = doctor.Id })"
                                               class="btn btn-sm btn-outline-danger"
                                               title="Remove Doctor"
                                               onclick="return confirm('Are you sure you want to delete Dr. @doctor.FullName?')">
                                                <i class="fas fa-trash-alt"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info text-center">
                    <i class="fas fa-info-circle me-2"></i> No doctors found in the system.
                    <a href="@Url.Action("AddDoctor", "Doctor")" class="alert-link">Add a new doctor</a> to get started.
                </div>
            }
        </div>
        @if (Model.Any())
        {
            <div class="card-footer bg-white">
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        Showing <strong>@Model.Count()</strong> doctors
                    </div>
                    <div>
                        <button id="exportToExcel" class="btn btn-sm btn-outline-success">
                            <i class="fas fa-file-excel me-1"></i> Export to Excel
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <!-- Include SheetJS for Excel export -->
    <script src="https://cdn.jsdelivr.net/npm/xlsx@0.18.5/dist/xlsx.full.min.js"></script>

    <script>
        $(document).ready(function () {
            // Search functionality
            $('#searchButton').click(function () {
                filterTable();
            });

            $('#searchInput').keyup(function () {
                filterTable();
            });

            function filterTable() {
                const searchText = $('#searchInput').val().toLowerCase();
                $('#doctorsTable tbody tr').each(function () {
                    const rowText = $(this).text().toLowerCase();
                    $(this).toggle(rowText.indexOf(searchText) > -1);
                });
            }

            // Excel Export functionality
            $('#exportToExcel').click(function () {
                // Get the table element
                const table = document.getElementById('doctorsTable');

                // Clone the table to modify it for export
                const cloneTable = table.cloneNode(true);

                // Remove action buttons from the cloned table
                $(cloneTable).find('th:last-child, td:last-child').remove();

                // Convert the table to a worksheet
                const worksheet = XLSX.utils.table_to_sheet(cloneTable);

                // Create a new workbook
                const workbook = XLSX.utils.book_new();
                XLSX.utils.book_append_sheet(workbook, worksheet, "Doctors");

                // Generate the Excel file
                const date = new Date().toISOString().slice(0, 10);
                XLSX.writeFile(workbook, `Doctors_${date}.xlsx`);
            });

            // Confirmation for delete
            $('.btn-outline-danger').click(function (e) {
                if (!confirm('Are you sure you want to delete this doctor?')) {
                    e.preventDefault();
                }
            });
        });
    </script>
}