<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - PetCare System</title>

    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

    <style>
        /* Base Styles */
        :root {
            --primary-color: #6C63FF;
            --secondary-color: #FF6584;
            --accent-color: #FFC107;
            --dark-color: #2D3748;
            --light-color: #F7FAFC;
            --success-color: #48BB78;
            --warning-color: #ED8936;
            --danger-color: #F56565;
            --info-color: #4299E1;
            --gradient-primary: linear-gradient(135deg, var(--primary-color) 0%, #8B7AFF 100%);
            --gradient-secondary: linear-gradient(135deg, var(--secondary-color) 0%, #FF8E9E 100%);
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: var(--dark-color);
            background-color: #F8F9FA;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        /* Enhanced Loader */
        #loader {
            position: fixed;
            width: 100%;
            height: 100vh;
            background: var(--gradient-primary);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            z-index: 9999;
            transition: opacity 0.5s ease-out;
        }

        .loader-container {
            position: relative;
            width: 120px;
            height: 120px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .loader-circle {
            position: absolute;
            width: 100%;
            height: 100%;
            border: 3px solid rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            animation: rotate 3s linear infinite;
        }

            .loader-circle:nth-child(1) {
                border-bottom-color: rgba(255, 255, 255, 0.8);
                animation-delay: 0.1s;
            }

            .loader-circle:nth-child(2) {
                border-right-color: rgba(255, 255, 255, 0.6);
                animation-delay: 0.2s;
            }

            .loader-circle:nth-child(3) {
                border-top-color: rgba(255, 255, 255, 0.4);
                animation-delay: 0.3s;
            }

        .loader-icon {
            font-size: 48px;
            color: white;
            animation: pulse 1.5s ease-in-out infinite alternate;
        }

        .loader-text {
            margin-top: 20px;
            color: white;
            font-size: 16px;
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 1px;
            animation: fadeInOut 2s ease-in-out infinite alternate;
        }

        .loader-progress {
            width: 180px;
            height: 4px;
            background: rgba(255, 255, 255, 0.2);
            margin-top: 15px;
            border-radius: 2px;
            overflow: hidden;
        }

        .loader-progress-bar {
            height: 100%;
            width: 0%;
            background: white;
            animation: progress 1.5s ease-in-out infinite;
        }

        /* Content Transition */
        .content {
            display: none;
            opacity: 0;
            transition: opacity 0.5s ease-in;
            flex: 1;
        }

            .content.show {
                opacity: 1;
            }

        /* Modern Navbar */
        .navbar {
            background: white;
            padding: 0.75rem 1rem;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.08);
            border-radius: 0;
            position: sticky;
            top: 0;
            z-index: 1030;
        }

        .navbar-brand {
            font-weight: 700;
            font-size: 1.5rem;
            color: var(--dark-color);
            display: flex;
            align-items: center;
        }

            .navbar-brand i {
                color: var(--primary-color);
                font-size: 1.75rem;
                margin-right: 0.5rem;
                transition: transform 0.3s ease;
            }

            .navbar-brand:hover i {
                transform: rotate(-15deg);
            }

        .navbar-nav .nav-link {
            position: relative;
            padding: 0.5rem 1rem;
            margin: 0 0.25rem;
            font-weight: 500;
            color: var(--dark-color) !important;
            border-radius: 6px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
        }

            .navbar-nav .nav-link i {
                margin-right: 0.5rem;
                font-size: 1rem;
                width: 20px;
                text-align: center;
            }

            .navbar-nav .nav-link:hover,
            .navbar-nav .nav-link.active {
                background-color: rgba(108, 99, 255, 0.1);
                color: var(--primary-color) !important;
            }

            .navbar-nav .nav-link.active {
                font-weight: 600;
            }

                .navbar-nav .nav-link.active:after {
                    content: '';
                    position: absolute;
                    bottom: 0;
                    left: 50%;
                    transform: translateX(-50%);
                    width: 20px;
                    height: 3px;
                    background-color: var(--primary-color);
                    border-radius: 3px;
                }

        /* Dropdown Menu */
        .dropdown-menu {
            border: none;
            box-shadow: 0 5px 20px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            padding: 0.5rem 0;
            margin-top: 0.5rem;
        }

        .dropdown-item {
            padding: 0.5rem 1.25rem;
            font-weight: 500;
            color: var(--dark-color);
            transition: all 0.2s ease;
            display: flex;
            align-items: center;
        }

            .dropdown-item i {
                margin-right: 0.75rem;
                color: var(--primary-color);
            }

            .dropdown-item:hover {
                background-color: rgba(108, 99, 255, 0.05);
                color: var(--primary-color);
                transform: translateX(3px);
            }

        .dropdown-divider {
            border-color: rgba(0, 0, 0, 0.05);
        }

        /* User Profile */
        .user-profile {
            display: flex;
            align-items: center;
            padding: 0.25rem 0.75rem;
            border-radius: 50px;
            transition: all 0.3s ease;
        }

            .user-profile:hover {
                background-color: rgba(108, 99, 255, 0.1);
            }

        .user-avatar {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            margin-right: 0.5rem;
            object-fit: cover;
            border: 2px solid var(--primary-color);
        }

        .user-name {
            font-weight: 500;
            margin-right: 0.5rem;
        }

        /* Auth Buttons */
        .auth-links .btn {
            margin-left: 0.5rem;
            font-weight: 500;
            border-radius: 6px;
            padding: 0.5rem 1rem;
        }

        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

            .btn-primary:hover {
                background-color: #5A52E0;
                border-color: #5A52E0;
            }

        .btn-outline-primary {
            color: var(--primary-color);
            border-color: var(--primary-color);
        }

            .btn-outline-primary:hover {
                background-color: rgba(108, 99, 255, 0.1);
                color: var(--primary-color);
            }

        /* Main Content */
        .container.body-content {
            padding: 2rem 0;
            flex: 1;
        }

        /* Cards */
        .card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            margin-bottom: 1.5rem;
        }

            .card:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            }

        .card-header {
            background-color: white;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            font-weight: 600;
            padding: 1rem 1.5rem;
            border-radius: 12px 12px 0 0 !important;
        }

        .card-body {
            padding: 1.5rem;
        }

        /* Forms */
        .form-control {
            border: 1px solid #E2E8F0;
            border-radius: 6px;
            padding: 0.75rem 1rem;
            transition: all 0.3s ease;
        }

            .form-control:focus {
                border-color: var(--primary-color);
                box-shadow: 0 0 0 0.25rem rgba(108, 99, 255, 0.25);
            }

        .form-label {
            font-weight: 500;
            margin-bottom: 0.5rem;
        }

        /* Buttons */
        .btn {
            border-radius: 6px;
            font-weight: 500;
            padding: 0.625rem 1.25rem;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

            .btn i {
                margin-right: 0.5rem;
            }

        .btn-lg {
            padding: 0.75rem 1.5rem;
        }

        .btn-sm {
            padding: 0.375rem 0.75rem;
        }

        /* Alert Messages */
        .alert {
            border-radius: 8px;
            padding: 1rem 1.5rem;
            border: none;
        }

        .alert-success {
            background-color: rgba(72, 187, 120, 0.1);
            color: #2F855A;
        }

        .alert-danger {
            background-color: rgba(245, 101, 101, 0.1);
            color: #C53030;
        }

        .alert-info {
            background-color: rgba(66, 153, 225, 0.1);
            color: #2C5282;
        }

        /* Footer */
        footer {
            background-color: white;
            padding: 1.5rem;
            margin-top: 2rem;
            box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.05);
        }

            footer p {
                margin: 0.25rem 0;
                color: var(--dark-color);
                font-size: 0.9rem;
            }

            footer strong {
                color: var(--primary-color);
            }

        /* Utility Classes */
        .rounded-lg {
            border-radius: 12px;
        }

        .shadow-sm {
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }

        .shadow-md {
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        /* Animations */
        @@keyframes rotate {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        @@keyframes pulse {
            0% {
                transform: scale(1);
                opacity: 0.8;
            }

            100% {
                transform: scale(1.1);
                opacity: 1;
            }
        }

        @@keyframes fadeInOut {
            0% {
                opacity: 0.6;
            }

            100% {
                opacity: 1;
            }
        }

        @@keyframes progress {
            0% {
                width: 0%;
                left: 0;
            }

            50% {
                width: 100%;
                left: 0;
            }

            100% {
                width: 0%;
                left: 100%;
            }
        }

        @@keyframes ripple {
            to {
                transform: scale(4);
                opacity: 0;
            }
        }

        /* Responsive Adjustments */
        @@media (max-width: 992px) {
            .navbar-nav {
                padding: 1rem 0;
            }

                .navbar-nav .nav-link {
                    margin: 0.25rem 0;
                    padding: 0.75rem 1rem;
                }

            .auth-links {
                margin-top: 1rem;
                margin-left: 0;
            }

            .user-dropdown {
                margin-left: 0;
                margin-top: 1rem;
            }
        }

        /* Pet-specific elements */
        .pet-avatar {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            object-fit: cover;
            border: 3px solid white;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .pet-status {
            display: inline-block;
            padding: 0.25rem 0.75rem;
            border-radius: 50px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-healthy {
            background-color: rgba(72, 187, 120, 0.1);
            color: #2F855A;
        }

        .status-treatment {
            background-color: rgba(245, 158, 11, 0.1);
            color: #B7791F;
        }

        .status-critical {
            background-color: rgba(245, 101, 101, 0.1);
            color: #C53030;
        }

        /* Consultation cards */
        .consultation-card {
            border-left: 4px solid var(--primary-color);
            transition: all 0.3s ease;
        }

            .consultation-card:hover {
                border-left-width: 8px;
            }

        .consultation-date {
            font-size: 0.85rem;
            color: #718096;
        }

        .consultation-vet {
            font-weight: 600;
            color: var(--dark-color);
        }

        .consultation-notes {
            color: #4A5568;
            font-size: 0.9rem;
        }

        /* Loading state */
        .form-loading {
            position: relative;
        }

            .form-loading:after {
                content: "";
                position: absolute;
                top: 50%;
                left: 50%;
                width: 20px;
                height: 20px;
                margin: -10px 0 0 -10px;
                border: 2px solid rgba(108, 99, 255, 0.3);
                border-top-color: var(--primary-color);
                border-radius: 50%;
                animation: spin 1s linear infinite;
                display: none;
            }

            .form-loading.loading:after {
                display: block;
            }

        @@keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }
        /* Hide text by default */
        .nav-text {
            display: none;
            margin-left: 5px;
        }

        /* Show text on hover (desktop) */
        .nav-item:hover .nav-text {
            display: inline;
        }

        /* Show text on touch (mobile) */
        @@media (max-width: 991.98px) {
            .nav-text {
                display: inline !important;
            }
        }

        /* Alternative approach for touch devices */
        .nav-item:active .nav-text,
        .nav-item:focus .nav-text,
        .nav-item:focus-within .nav-text {
            display: inline;
        }
    </style>
</head>

<body onload="hideLoader()">

    <!-- Enhanced Loader -->
    <div id="loader">
        <div class="loader-container">
            <div class="loader-circle"></div>
            <div class="loader-circle"></div>
            <div class="loader-circle"></div>
            <i class="fas fa-paw loader-icon"></i>
        </div>
        <div class="loader-text">Loading PetCare</div>
        <div class="loader-progress">
            <div class="loader-progress-bar"></div>
        </div>
    </div>

    <div class="content" id="main-content">
        @if (User.Identity.IsAuthenticated)
        {
            <nav class="navbar navbar-expand-lg navbar-light">
                <div class="container">
                    @if (!User.IsInRole("Admin"))
                    {
                        <a class="navbar-brand" href="@Url.Action("Index", "Home")">
                            <i class="fas fa-paw"></i> PetCare System
                        </a>
                    }
                    <!-- Toggler button for mobile -->
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>

                    <div class="collapse navbar-collapse" id="navbarNav">
                        @if (!User.IsInRole("Admin"))
                        {
                            <ul class="navbar-nav me-auto">
                                <li class="nav-item">
                                    <a href="@Url.Action("Index", "Home")" class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "Home" && ViewContext.RouteData.Values["Action"].ToString() == "Index" ? "active" : "")" data-link="home">
                                        <i class="fas fa-home"></i>
                                        <span class="nav-text">Home</span>
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a href="@Url.Action("About", "Home")" class="nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "About" ? "active" : "")" data-link="about">
                                        <i class="fas fa-info-circle"></i>
                                        <span class="nav-text">About</span>
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a href="@Url.Action("Contact", "Home")" class="nav-link @(ViewContext.RouteData.Values["Action"].ToString() == "Contact" ? "active" : "")" data-link="contact">
                                        <i class="fas fa-envelope"></i>
                                        <span class="nav-text">Contact</span>
                                    </a>
                                </li>
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <li class="nav-item">
                                        <a href="@Url.Action("Dashboard", "Pet")" class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "Pet" ? "active" : "")" data-link="dashboard">
                                            <i class="fas fa-paw"></i>
                                            <span class="nav-text">Pet Dashboard</span>
                                        </a>
                                    </li>
                                    <li class="nav-item">
                                        <a href="@Url.Action("Detail", "Vet_Consultations")" class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "Vet_Consultations" ? "active" : "")" data-link="consultations">
                                            <i class="fas fa-stethoscope"></i>
                                            <span class="nav-text">Vet Consultations</span>
                                        </a>
                                    </li>
                                    <li class="nav-item">
                                        <a href="@Url.Action("Index", "Pet_Boarding")" class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "Pet_Boarding" ? "active" : "")" data-link="membership">
                                            <i class="fas fa-id-card"></i>
                                            <span class="nav-text">Pet Boarding</span>
                                        </a>
                                    </li>
                                    <li class="nav-item">
                                        <a href="@Url.Action("Index", "Membership")" class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "Membership" ? "active" : "")" data-link="membership">
                                            <i class="fas fa-id-card"></i>
                                            <span class="nav-text">Membership</span>
                                        </a>
                                    </li>
                                    <!-- Add DayCare Index Link -->
                                    <li class="nav-item">
                                        <a href="@Url.Action("Index", "DayCare")" class="nav-link @(ViewContext.RouteData.Values["Controller"].ToString() == "DayCare" ? "active" : "")" data-link="daycare">
                                            <i class="fas fa-calendar-day"></i>
                                            <span class="nav-text">Day Care</span>
                                        </a>
                                    </li>
                                }
                            </ul>
                        }
                        @Html.Partial("_LoginPartial")
                    </div>
                </div>
            </nav>
        }

        <div class="container body-content">
            @RenderBody()
            <hr />
            <footer>
                <p>&copy; @DateTime.Now.Year - <strong>PetCare System</strong></p>
                <p>All rights reserved</p>
            </footer>
        </div>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
    @RenderSection("Styles", required: false)

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        function hideLoader() {
            setTimeout(() => {
                document.getElementById("loader").style.opacity = "0";
                setTimeout(() => {
                    document.getElementById("loader").style.display = "none";
                    document.getElementById("main-content").style.display = "block";
                    setTimeout(() => {
                        document.getElementById("main-content").classList.add("show");
                    }, 50);
                }, 500);
            }, 2000); // Loader disappears after 2 seconds
        }

        // Enhanced ActionLink functionality
        document.addEventListener('DOMContentLoaded', function () {
            // Smooth scrolling for anchor links
            document.querySelectorAll('a[href^="#"]').forEach(anchor => {
                anchor.addEventListener('click', function (e) {
                    e.preventDefault();
                    const target = document.querySelector(this.getAttribute('href'));
                    if (target) {
                        target.scrollIntoView({
                            behavior: 'smooth'
                        });
                    }
                });
            });

            // Add active class to current page link
            const currentPath = window.location.pathname.toLowerCase();
            document.querySelectorAll('.nav-link').forEach(link => {
                if (link.getAttribute('href').toLowerCase() === currentPath) {
                    link.classList.add('active');
                }
            });

            // Add hover effects to dropdown items
            document.querySelectorAll('.dropdown-item').forEach(item => {
                item.addEventListener('mouseenter', function () {
                    this.style.transform = 'translateX(5px)';
                });
                item.addEventListener('mouseleave', function () {
                    this.style.transform = 'translateX(0)';
                });
            });

            // Add ripple effect to buttons
            document.querySelectorAll('.btn').forEach(button => {
                button.addEventListener('click', function (e) {
                    // Only create ripple if button doesn't have disabled class
                    if (!this.classList.contains('disabled')) {
                        const ripple = document.createElement('span');
                        ripple.classList.add('ripple-effect');

                        const rect = this.getBoundingClientRect();
                        const size = Math.max(rect.width, rect.height);
                        const x = e.clientX - rect.left - size / 2;
                        const y = e.clientY - rect.top - size / 2;

                        ripple.style.width = ripple.style.height = `${size}px`;
                        ripple.style.left = `${x}px`;
                        ripple.style.top = `${y}px`;

                        this.appendChild(ripple);

                        setTimeout(() => {
                            ripple.remove();
                        }, 1000);
                    }
                });
            });

            // Form submission loading indicators
            document.querySelectorAll('form').forEach(form => {
                form.addEventListener('submit', function () {
                    const submitBtn = this.querySelector('button[type="submit"]');
                    if (submitBtn) {
                        submitBtn.classList.add('loading');
                        submitBtn.classList.add('disabled');
                        submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>Processing...';
                    }
                });
            });
        });

        // Function to handle AJAX form submissions
        function submitFormAjax(form, successCallback, errorCallback) {
            const formData = new FormData(form);

            fetch(form.action, {
                method: form.method,
                body: formData,
                headers: {
                    'Accept': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    if (successCallback) successCallback(data);
                })
                .catch(error => {
                    if (errorCallback) errorCallback(error);
                });
        }
    </script>
</body>
</html>