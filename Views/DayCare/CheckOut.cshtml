@model PetCare_system.Models.DayCare

@{
    ViewBag.Title = "Pet Check Out";
}

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0">
                <i class="fas fa-sign-out-alt me-2"></i>Pet Check Out
            </h2>
        </div>

        <div class="card-body">
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show">
                    <i class="fas fa-exclamation-circle me-2"></i>@TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="card h-100 border-primary">
                        <div class="card-header bg-light">
                            <h5 class="card-title mb-0">
                                <i class="fas fa-info-circle text-primary me-2"></i>Check-In Details
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row mb-3">
                                <div class="col-sm-4 fw-bold">Pet Name:</div>
                                <div class="col-sm-8">
                                    <i class="fas fa-paw me-2 text-muted"></i>@Html.DisplayFor(model => model.Pet.Name)
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-sm-4 fw-bold">Check-In Date:</div>
                                <div class="col-sm-8">
                                    <i class="far fa-calendar-alt me-2 text-muted"></i>@Model.CheckInDate.ToString("MMM dd, yyyy h:mm tt")
                                </div>
                            </div>
                            <div class="row mb-3">
                                <div class="col-sm-4 fw-bold">Duration:</div>
                                <div class="col-sm-8">
                                    <i class="far fa-clock me-2 text-muted"></i>@((DateTime.Now - Model.CheckInDate).TotalHours.ToString("0.0")) hours
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="card h-100 border-info">
                        <div class="card-header bg-light">
                            <h5 class="card-title mb-0">
                                <i class="fas fa-clipboard-list text-info me-2"></i>Care Information
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row mb-3">
                                <div class="col-sm-4 fw-bold">Care Type:</div>
                                <div class="col-sm-8">
                                    <span class="badge bg-@(Model.CareType == "VIP" ? "purple" : Model.CareType == "Premium" ? "warning" : "secondary")">
                                        @Model.CareType
                                    </span>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-sm-4 fw-bold">Special Instructions:</div>
                                <div class="col-sm-8">
                                    @if (!string.IsNullOrEmpty(Model.SpecialInstructions))
                                    {
                                        <div class="alert alert-light border">
                                            <i class="fas fa-sticky-note text-muted me-2"></i>
                                            @Model.SpecialInstructions
                                        </div>
                                    }
                                    else
                                    {
                                        <span class="text-muted">None provided</span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="alert alert-warning">
                <h5 class="alert-heading">
                    <i class="fas fa-exclamation-triangle me-2"></i>Important
                </h5>
                <p class="mb-0">
                    Please verify all information before checking out. This action cannot be undone.
                    The check-out time will be recorded as <strong>@DateTime.Now.ToString("MMM dd, yyyy h:mm tt")</strong>.
                </p>
            </div>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="d-flex justify-content-between mt-4">
                    <div>
                        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-outline-secondary" })
                    </div>
                    <div>
                        <button type="submit" class="btn btn-success px-4">
                            <i class="fas fa-check-circle me-2"></i>Confirm Check Out
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .bg-purple {
        background-color: #6f42c1;
    }

    .card {
        border-radius: 0.5rem;
    }

    .card-header {
        border-radius: 0.5rem 0.5rem 0 0 !important;
    }
</style>