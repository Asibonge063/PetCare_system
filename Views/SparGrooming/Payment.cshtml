@model PetCare_system.Models.Spar_GroomPayment
@{
    ViewBag.Title = "Complete Your Payment";
    // Get the booking details to show services
    var booking = ViewBag.BookingDetails as PetCare_system.Models.Spar_Grooming;

    // Add null checks for critical properties
    var serviceType = booking?.ServiceType.ToString() ?? "Basic Grooming";
    var basePrice = booking?.BasePrice.ToString("C") ?? "R50.00";
    var petName = booking?.PetName ?? "Not specified";
    var petType = booking?.PetType.ToString() ?? "Not specified";
    var breed = booking?.Breed ?? "Not specified";
}
@using System.Globalization
@{
    var culture = new CultureInfo("en-ZA"); // South African culture
}

<div class="payment-container">
    <div class="payment-header">
        <h2><i class="fas fa-paw"></i> Complete Your Payment</h2>
        <p class="text-muted">Booking Reference: #@Model.BookingId</p>
    </div>

    <div class="row">
        <!-- Service Summary Column -->
        <div class="col-md-6">
            <div class="service-summary-card">
                <h4><i class="fas fa-clipboard-list"></i> Service Summary</h4>

                <div class="service-item">
                    <div class="service-name">@serviceType</div>
                    <div class="service-price">@basePrice</div>
                </div>

                @if (booking != null && booking.AddOnPrice > 0)
                {
                    <div class="addons-section">
                        <h5>Add-on Services:</h5>
                        @if (booking.AddOnServices.HasFlag(PetCare_system.Models.AddOnServices.FleaTreatment))
                        {
                            <div class="service-item">
                                <div class="service-name">Flea Treatment</div>
                                <div class="service-price">R25.00</div>
                            </div>
                        }
                        @if (booking.AddOnServices.HasFlag(PetCare_system.Models.AddOnServices.DeShedding))
                        {
                            <div class="service-item">
                                <div class="service-name">De-shedding</div>
                                <div class="service-price">R30.00</div>
                            </div>
                        }
                        @if (booking.AddOnServices.HasFlag(PetCare_system.Models.AddOnServices.TeethCleaning))
                        {
                            <div class="service-item">
                                <div class="service-name">Teeth Cleaning</div>
                                <div class="service-price">R50.00</div>
                            </div>
                        }
                    </div>
                }

                <div class="total-section">
                    <div class="total-label">Total Amount:</div>
                    <div class="total-amount">@Model.Amount.ToString("C", culture)</div>
                </div>

                <div class="pet-info">
                    <h5><i class="fas fa-paw"></i> Pet Information</h5>
                    <p><strong>Name:</strong> @petName</p>
                    <p><strong>Type:</strong> @petType</p>
                    <p><strong>Breed:</strong> @breed</p>
                </div>
            </div>
        </div>

        <!-- Payment Form Column -->
        <div class="col-md-6">
            <div class="payment-form-card">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.BookingId)

                    <h4><i class="far fa-credit-card"></i> Payment Details</h4>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CardName, "Name on Card")
                        @Html.EditorFor(model => model.CardName, new { htmlAttributes = new { @class = "form-control", placeholder = "John Smith" } })
                        @Html.ValidationMessageFor(model => model.CardName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CardNumber, "Card Number")
                        @Html.EditorFor(model => model.CardNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "1234 5678 9012 3456" } })
                        @Html.ValidationMessageFor(model => model.CardNumber, "", new { @class = "text-danger" })
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ExpiryDate, "Expiry Date")
                                @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @class = "form-control", placeholder = "MM/YY" } })
                                @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CVV, "Security Code")
                                @Html.EditorFor(model => model.CVV, new { htmlAttributes = new { @class = "form-control", placeholder = "123" } })
                                @Html.ValidationMessageFor(model => model.CVV, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="payment-security">
                        <i class="fas fa-lock"></i> Your payment is securely encrypted
                    </div>

                    <button type="submit" class="btn btn-pay-now">
                        <i class="fas fa-check-circle"></i> Pay @Model.Amount.ToString("C", culture)
                    </button>
                }
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .payment-container {
            background: #f8f9fa;
            padding: 30px;
            border-radius: 10px;
            margin-top: 20px;
        }

        .payment-header {
            text-align: center;
            margin-bottom: 30px;
        }

            .payment-header h2 {
                color: #6a4c93;
                font-weight: 600;
            }

        .service-summary-card, .payment-form-card {
            background: white;
            padding: 25px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            height: 100%;
        }

        .service-item {
            display: flex;
            justify-content: space-between;
            padding: 10px 0;
            border-bottom: 1px solid #eee;
        }

        .service-name {
            font-weight: 500;
        }

        .addons-section {
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px dashed #ddd;
        }

        .total-section {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
            padding-top: 15px;
            border-top: 2px solid #6a4c93;
            font-size: 1.2em;
        }

        .total-label {
            font-weight: 600;
        }

        .total-amount {
            font-weight: 700;
            color: #6a4c93;
        }

        .pet-info {
            margin-top: 25px;
            padding: 15px;
            background: #f8f5ff;
            border-radius: 5px;
        }

        .btn-pay-now {
            background: #6a4c93;
            color: white;
            width: 100%;
            padding: 12px;
            font-size: 1.1em;
            font-weight: 500;
            margin-top: 20px;
            border: none;
            transition: all 0.3s;
        }

            .btn-pay-now:hover {
                background: #5a3d83;
                transform: translateY(-2px);
            }

        .payment-security {
            color: #28a745;
            text-align: center;
            margin: 15px 0;
            font-size: 0.9em;
        }

        .fa-paw, .fa-clipboard-list, .fa-credit-card {
            margin-right: 8px;
            color: #6a4c93;
        }

        .form-control {
            padding: 12px;
            border-radius: 4px;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(function () {
            // Format card number
            $('#CardNumber').on('input', function () {
                var val = $(this).val().replace(/\s+/g, '');
                if (val.length > 0) {
                    val = val.match(new RegExp('.{1,4}', 'g')).join(' ');
                }
                $(this).val(val);
            });

            // Format expiry date
            $('#ExpiryDate').on('input', function () {
                var val = $(this).val().replace(/\D/g, '').substring(0, 4);
                if (val.length > 2) {
                    val = val.substring(0, 2) + '/' + val.substring(2);
                }
                $(this).val(val);
            });
        });
    </script>
}